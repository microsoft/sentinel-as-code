AlertRuleTemplateName: 
Id: 6516f033-0b22-49d2-8c48-4bc46bcbb099
Enabled: true
DisplayName: Excessive Logon Failures
Description: Excessive Logon Failures
Query: "let starttime = 8d;\n  let endtime = 1d;\n  let threshold = 0.333;\n  let countlimit = 50;\n  SecurityEvent\n  | where TimeGenerated >= ago(endtime)\n  | where EventID == 4625 and AccountType =~ \"User\"\n  | where IpAddress !in (\"127.0.0.1\", \"::1\")\n  | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), CountToday = count() by EventID, Account, LogonTypeName, SubStatus, AccountType, Computer, WorkstationName, IpAddress\n  | join kind=leftouter (\n      SecurityEvent \n      | where TimeGenerated between (ago(starttime) .. ago(endtime))\n      | where EventID == 4625 and AccountType =~ \"User\"\n      | where IpAddress !in (\"127.0.0.1\", \"::1\")\n      | summarize CountPrev7day = count() by EventID, Account, LogonTypeName, SubStatus, AccountType, Computer, WorkstationName, IpAddress\n  ) on EventID, Account, LogonTypeName, SubStatus, AccountType, Computer, WorkstationName, IpAddress\n  | where CountToday >= coalesce(CountPrev7day,0)*threshold and CountToday >= countlimit\n  //SubStatus Codes are detailed here - https://docs.microsoft.com/windows/security/threat-protection/auditing/event-4625\n  | extend Reason = case(\n  SubStatus =~ '0xC000005E', 'There are currently no logon servers available to service the logon request.',\n  SubStatus =~ '0xC0000064', 'User logon with misspelled or bad user account',\n  SubStatus =~ '0xC000006A', 'User logon with misspelled or bad password',    \n  SubStatus =~ '0xC000006D', 'Bad user name or password',\n  SubStatus =~ '0xC000006E', 'Unknown user name or bad password',\n  SubStatus =~ '0xC000006F', 'User logon outside authorized hours',\n  SubStatus =~ '0xC0000070', 'User logon from unauthorized workstation',\n  SubStatus =~ '0xC0000071', 'User logon with expired password',\n  SubStatus =~ '0xC0000072', 'User logon to account disabled by administrator',\n  SubStatus =~ '0xC00000DC', 'Indicates the Sam Server was in the wrong state to perform the desired operation',  \n  SubStatus =~ '0xC0000133', 'Clocks between DC and other computer too far out of sync',\n  SubStatus =~ '0xC000015B', 'The user has not been granted the requested logon type (aka logon right) at this machine',\n  SubStatus =~ '0xC000018C', 'The logon request failed because the trust relationship between the primary domain and the trusted domain failed',\n  SubStatus =~ '0xC0000192', 'An attempt was made to logon, but the Netlogon service was not started',\n  SubStatus =~ '0xC0000193', 'User logon with expired account',\n  SubStatus =~ '0xC0000224', 'User is required to change password at next logon',\n  SubStatus =~ '0xC0000225', 'Evidently a bug in Windows and not a risk',\n  SubStatus =~ '0xC0000234', 'User logon with account locked',\n  SubStatus =~ '0xC00002EE', 'Failure Reason: An Error occurred during Logon',\n  SubStatus =~ '0xC0000413', 'Logon Failure: The machine you are logging onto is protected by an authentication firewall. The specified account is not allowed to authenticate to the machine',\n  strcat('Unknown reason substatus: ', SubStatus))\n  | extend WorkstationName = iff(WorkstationName == \"-\" or isempty(WorkstationName), Computer , WorkstationName) \n  | project StartTime, EndTime, EventID, Account, LogonTypeName, SubStatus, Reason, AccountType, Computer, WorkstationName, IpAddress, CountToday, CountPrev7day, Avg7Day = round(CountPrev7day*1.00/7,2)\n  | summarize StartTime = min(StartTime), EndTime = max(EndTime), Computer = make_set(Computer,128), IpAddressList = make_set(IpAddress,128), sum(CountToday), sum(CountPrev7day), avg(Avg7Day) \n  by EventID, Account, LogonTypeName, SubStatus, Reason, AccountType, WorkstationName\n  | order by sum_CountToday desc nulls last \n  | extend timestamp = StartTime, AccountCustomEntity = Account, HostCustomEntity = WorkstationName"
SeveritiesFilter: 
Severity: Medium
QueryFrequency: PT5M
QueryPeriod: PT5M
TriggerOperator: GreaterThan
TriggerThreshold: 0
Tactics: 
EventGroupSettings: 
SuppressionDuration: PT1H
SuppressionEnabled: false
IncidentConfiguration:
  createIncident: true
  groupingConfiguration:
    enabled: false
    reopenClosedIncident: false
    lookbackDuration: PT5M
    entitiesMatchingMethod: All
    groupByEntities: []
EntityMappings: 
Kind: Scheduled
