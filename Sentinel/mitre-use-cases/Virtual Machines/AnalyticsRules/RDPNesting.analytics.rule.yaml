AlertRuleTemplateName: 
Id: 788ef2f2-d020-4e21-a15a-0e2001693504
Enabled: true
DisplayName: RDP Nesting
Description: RDP Nesting
Query: "let endtime = 1d;\n  let starttime = 8d;\n  // The threshold below excludes matching on RDP connection computer counts of 5 or more by a given account and IP in a given day.  Change the threshold as needed.\n  let threshold = 5;\n  SecurityEvent\n  | where TimeGenerated >= ago(endtime) \n  | where EventID == 4624 and LogonType == 10\n  // Labeling the first RDP connection time, computer and ip\n  | extend FirstHop = TimeGenerated, FirstComputer = toupper(Computer), FirstIPAddress = IpAddress, Account = tolower(Account)  \n  | join kind=inner (\n  SecurityEvent\n  | where TimeGenerated >= ago(endtime) \n  | where EventID == 4624 and LogonType == 10\n  // Labeling the second RDP connection time, computer and ip\n  | extend SecondHop = TimeGenerated, SecondComputer = toupper(Computer), SecondIPAddress = IpAddress, Account = tolower(Account)\n  ) on Account\n  // Make sure that the first connection is after the second connection --> SecondHop > FirstHop\n  // Then identify only RDP to another computer from within the first RDP connection by only choosing matches where the Computer names do not match --> FirstComputer != SecondComputer\n  // Then make sure the IPAddresses do not match by excluding connections from the same computers with first hop RDP connections to multiple computers --> FirstIPAddress != SecondIPAddress\n  | where FirstComputer != SecondComputer and FirstIPAddress != SecondIPAddress and SecondHop > FirstHop\n  // where the second hop occurs within 30 minutes of the first hop\n  | where SecondHop <= FirstHop+30m\n  | distinct Account, FirstHop, FirstComputer, FirstIPAddress, SecondHop, SecondComputer, SecondIPAddress, AccountType, Activity, LogonTypeName, ProcessName\n  // use left anti to exclude anything from the previous 7 days where the Account and IP has connected 5 or more computers.\n  | join kind=leftanti (\n  SecurityEvent\n  | where TimeGenerated >= ago(starttime) and TimeGenerated < ago(endtime) \n  | where EventID == 4624 and LogonType == 10\n  | summarize makeset(Computer), ComputerCount = dcount(Computer) by bin(TimeGenerated, 1d), Account = tolower(Account), IpAddress\n  // Connection count to computer by same account and IP to exclude counts of 5 or more on a given day\n  | where ComputerCount >= threshold\n  | mvexpand set_Computer\n  | extend Computer = toupper(set_Computer)\n  ) on Account, $left.SecondComputer == $right.Computer, $left.SecondIPAddress == $right.IpAddress\n  | summarize FirstHopFirstSeen = min(FirstHop), FirstHopLastSeen = max(FirstHop) by Account, FirstComputer, FirstIPAddress, SecondHop, SecondComputer, \n  SecondIPAddress, AccountType, Activity, LogonTypeName, ProcessName\n  | extend timestamp = FirstHopFirstSeen, AccountCustomEntity = Account, HostCustomEntity = FirstComputer, IPCustomEntity = FirstIPAddress"
SeveritiesFilter: 
Severity: Medium
QueryFrequency: PT5M
QueryPeriod: PT5M
TriggerOperator: GreaterThan
TriggerThreshold: 0
Tactics: 
- InitialAccess
EventGroupSettings: 
SuppressionDuration: PT1H
SuppressionEnabled: false
IncidentConfiguration:
  createIncident: true
  groupingConfiguration:
    enabled: false
    reopenClosedIncident: false
    lookbackDuration: PT5M
    entitiesMatchingMethod: All
    groupByEntities: []
EntityMappings: 
Kind: Scheduled
